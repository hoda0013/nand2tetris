// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, a=o0, b=o1, c=o2, d=o3, e=o4, f=o5, g=o6, h=o7, sel=address[0..2]);
    RAM8(in=in, out=r0, address=address[3..5], load=o0);
    RAM8(in=in, out=r1, address=address[3..5], load=o1);
    RAM8(in=in, out=r2, address=address[3..5], load=o2);
    RAM8(in=in, out=r3, address=address[3..5], load=o3);
    RAM8(in=in, out=r4, address=address[3..5], load=o4);
    RAM8(in=in, out=r5, address=address[3..5], load=o5);
    RAM8(in=in, out=r6, address=address[3..5], load=o6);
    RAM8(in=in, out=r7, address=address[3..5], load=o7);
    Mux8Way16(a=r0, b=r1, c=r2, d=r3, e=r4, f=r5, g=r6, h=r7, sel=address[0..2], out=out);
}
